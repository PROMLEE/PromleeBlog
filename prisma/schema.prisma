generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Post {
  id            BigInt     @id @unique @default(autoincrement())
  series_no     BigInt
  post_url      String     @default("")
  name          String     @default("")
  nameko        String     @default("")
  desc          String?    @default("")
  init_date     DateTime   @default(now()) @db.Timestamptz(6)
  thumbnail_url String     @default("")
  view          BigInt?    @default(0)
  like          BigInt?    @default(0)
  series_id     BigInt
  mod_date      DateTime   @default(now()) @updatedAt @db.Timestamptz(6)
  lock          Boolean?   @default(false)
  posting       String?    @default("")
  Series        Series     @relation(fields: [series_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Post_Tag      Post_Tag[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Category {
  id      BigInt    @id @default(autoincrement())
  name    String    @default("")
  nameko  String    @default("")
  url     String    @unique
  Subject Subject[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Post_Tag {
  post_id BigInt
  tag_id  BigInt
  id      BigInt @id @unique @default(autoincrement())
  Post    Post   @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Tag     Tag    @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Series {
  id         BigInt  @id @default(autoincrement())
  subject_id BigInt
  name       String  @default("")
  nameko     String  @default("")
  url        String  @unique
  Post       Post[]
  Subject    Subject @relation(fields: [subject_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Subject {
  id          BigInt   @id @default(autoincrement())
  category_id BigInt
  name        String   @default("")
  koname      String   @default("")
  url         String   @unique
  Series      Series[]
  Category    Category @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Tag {
  id       BigInt     @id @unique @default(autoincrement())
  name     String     @default("")
  nameko   String     @default("")
  Post_Tag Post_Tag[]
}
